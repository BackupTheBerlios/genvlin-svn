CURRENT BUGS:
=============
favourites sometimes will not appear?
the JComboBox hack in the GTablePanel does not work very fine
    createDefaultColumnsFromModel will be called to often!!
we have different import=> 1. simply (re)open or /make visible
                           2. force import really load from disc, also if opened
before saving GTablePanel.stopCellEditing should be called (who could call this?)
one table is not a singleton! support clones!
print to html will only recognize the files selected in favourites - not in Editortab
open is different to import?
open only twice if clone!
expand favourite node is not performant!?
(vectorchildren enabled => expand node => sometimes double click will not open these data files!)
if ImportPanel is too small button disappear (text should disappear first!)
vector's aren't threadsave! -> implement setReadOnly(boolean) instead of synchron.!

TODO-TASKS (the very very important one)
========================================
solved: handle null in Pools
solved: export tables (not very well - in TableOpenSupport - but it works!)
solved: reinvent GTask -> put plotcreation(or other big processes) in a thread(swingworker?)
solved partially: Jcombobox in tableheader (String, double, int, BigDecimal) => user can choose
    "precision <-> performance"
solved: documentation= user guide, dev guide:tex/html
add statistical function/plugin/library!!?? (min/max/sort/sqrt((x-xBar)^2/)/xBar/...)
fitting: linear/polynomial/nonlinaer/integration
    Greg Dennis needs java3d :-( and is GPL! :-(
    numbercrunchers RegressionLineTest doesnot work, cause getNError, getMerror 
        and getCorr are not correct!!!
!!Plugin concept should be easier or we should change it completely!!
    provide EasyCtx for each component (via ClasName.class.toString()) ?
    Is GTablePanel a plugin?
    should plugins have there own action context?! Yes!
    JFreeChart: overload ChartPanel.attemptEditChartProperties to show dialog via platform
console: provides inputline + scriptwindow + "object(ID).method()"
    see http://weblogs.java.net/blog/claudio/archive/2006/05/a_brother_to_a_1.html
    or  http://pnuts.org/snapshot/latest/
units via header jcombobox (jquantitywrapper to handle these objects as numbers!)
read about the persistence concept in nb (+ exceptions) to store ID's, GUI settings of
    plot and table panels etc., fix serialisation exceptions
implement features for
    freehep: hep.graphics.j3d.*
    gnuplot:all
    JFreeChart:histograms ...
    JSci:periodictable,3d?
    matrex-2d,3d?

SMALL
=====
(easy) cleanup code-> comments: gui.* + platform.*
make "print to html" work
table template does not work!? I can't see it in Template manager and create new dialog.
faster importing a file (not setRow, but AbstractVector.add)
ImportTask as GTableModel-innerclass ? No! We should use the GTablePanel.importFile in runTask!
reload button in Gtablepanel
"save to global" button in separatorpanel
should Plugin extends Externalizable?
provide a script (bsh,xml?) for default font (size!).

BIG
====
add tests to the core test suites (e.g. I miss EventFiring mechanism in it) 
    and to its plugins
Mini(Swing)Platform (for each module: set smallest possible source targets!!)
develop mechanism equivalent to nb's layer.xml-mechanism to provide
    "popup/menubar registration" and user defined order of these actions.
OpenTheFirst/Last CharactersAsText (for copy and paste looking?)
Import
    let the user deside 1. which lines should be used for title and which
        should be ignored so that we can import columns without null (but different length)
        2. which algorithm (bshscript and compiled parsers) should be used for importing.
    automatic  cols no. detection (=1.) and separator detection (=2)
Table
    size adjusting -> qjcc
    properties window for tableColumn: info = Introspector.getBeanInfo(objectClass);
        see OOTableModel.analyzeTheObjects in /home/peter/genvlin/genvlinHoliday/good/13_oow/com/greenfabric/oow
    if table changed -> modify -> new propertyAction
    tablepanel export (html+text+picture)
    reinvent tablePanel via "extends VectorPool implements TableModel"
        we have to extend VectorPool!!(?)
        now also we could change XYVectorPoolWrapper write tests on
            de.genvlin.gui.table.* tests
    provide list with available actions on vector <-> user can select which
        of them should be displayed.
    undo of all available actions (except copy) + impl all required actions!!
output + log (action+time, clickable?)
various file types ??:
   datavectorfile =.dvf (one vector misc with infos: title, ..)
   one dvf can exist in multiple filters:
     txt,dat == filterForDataPoolFile = .filter (some vectors)
     dataPoolfile =.dpf (all .dvf)
     plotpoolfile == .ppf (some xyVectors (=which contains 2 pointers to vectors))
PlotCookie
reinvent GProperties:
    read gProperties from <name "genvlin.properties" url="?/genvlin.xml">
    plotlibs as plugins: read from plugin.xml => we can remove ModuleInstall
        dependencies from all plugins
We need a MainPoolExplorer! (later we need a need a (Easy) ProjectExplorer)
    provid methods: find(XYVector) and find(VectorInterface)
    /home/peter/Documents/computer/nbModule/tutNeu/aaFeadreaderTut/feedreader-tutorial.html
    SiteListComponent.java in /home/peter/Documents/computer/nbModule/tutNeu/aaFeadreaderTut/feedreader-source/feedreader/src/org/netbeans/modules/feedreader/
provide changing settings via NB-GUI
Open/Save and Import/Export Tasks
Vectors as nodes, not that easy! :-( provide actions, clone node, bean info etc.
    then these actions will be "visible" in menubar too
console + scripting?!!
    code completion, own toolbar, script panel, dataloader

BEFORE BRANDING:
================
    change application-name in or in a ./branding/modules/org-netbeans-core-windows.jar/org/netbeans/core/windows/view/ui/Bundle.properties
    (change splash screen size and )
    fontsize!!
    addSerialVersion: ~/genvlin/nbModule/tutNeu/aaFeadreaderTut/cluster_build_harness/nbbuild/misc/addSerialVer
    run pmd
    new doc + UPDATE doc: webdoc is sometimes the same as in tex: 
        1.home.html == userguide.section{Introduction}
        2.developer.html == userguide.section{Help Wanted}+Contact == devguide.help/contact
    add script folder to zip! (So that the user need not to unpack the jar!) How to import these scripts?